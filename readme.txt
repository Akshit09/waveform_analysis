Somewhat crude THD+N calculator in Python

Measures the total harmonic distortion plus noise (THD+N) for a given input signal, by guessing the fundamental frequency (finding the peak in the FFT), and notching it out in the frequency domain.

According to the never-wrong Wikipedia:

* THD is the fundamental alone vs the harmonics alone
* THD+N is the entire signal (not just the fundamental) vs the entire signal with the fundamental notched out.  (For low distortion, the difference between the entire signal and the fundamental is negligible.)

Example of usage, with 997 Hz full-scale sine wave generated by Adobe Audition at 96 kHz, showing the 16-bit quantization distortion:

> python thdcalculator.py "perfect 997 Hz no dither.flac"
Frequency:	997.000000 Hz
THD+N:  	0.0016% or -96.1 dB

Is this right?  Theoretical SNR of a FS sine is 1.761+6.02*16 = -98.09 dB.  Close, at least.

Art Ludwig's Sound Files (http://members.cox.net/artludwig/):
File                Claimed  Measured  (dB)
Reference           0.0%     0.0022%   -93.3
Single-ended triode 5.0%     5.06%     -25.9
Solid state         0.5%     0.51%     -45.8

Comparing a test device on an Audio Precision vs recorded into my 24-bit sound card with this script:

